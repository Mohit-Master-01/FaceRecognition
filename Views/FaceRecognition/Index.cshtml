@{
    ViewData["Title"] = "Face Recognition";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />

<div class="container mt-5">
    <h2 class="text-center mb-4">🔐 Face Recognition System</h2>

    <div class="card p-4 shadow-sm">
        <h4>👤 Register</h4>
        <div class="mb-3">
            <input type="text" id="username" class="form-control" placeholder="Username" />
        </div>
        <div class="mb-3">
            <input type="email" id="email" class="form-control" placeholder="Email" />
        </div>
        <button id="registerBtn" class="btn btn-primary w-100">Register with Face</button>
    </div>

    <hr class="my-4" />

    <div class="card p-4 shadow-sm">
        <h4>🔑 Login</h4>
        <button id="loginBtn" class="btn btn-success w-100">Login with Face</button>
    </div>

    <div id="resultMessage" class="text-success text-center mt-4 fw-bold"></div>
</div>

<!-- Hidden video modal -->
<div class="modal fade" id="cameraModal" tabindex="-1" aria-labelledby="cameraModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="cameraModalLabel">📷 Capture Your Face</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <video id="videoInput" width="100%" autoplay muted style="border-radius: 10px;"></video>
                <p class="mt-3">Keep your face visible and centered.</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js"></script>

    <script>
        let isCameraSetup = false;

        async function setupCamera() {
            const video = document.getElementById('videoInput');
            const stream = await navigator.mediaDevices.getUserMedia({ video: {} });
            video.srcObject = stream;
            isCameraSetup = true;
        }

        async function loadModels() {
            Swal.fire({ title: 'Loading Models...', allowOutsideClick: false, didOpen: () => Swal.showLoading() });
            await Promise.all([
                faceapi.nets.tinyFaceDetector.loadFromUri('https://justadudewhohacks.github.io/face-api.js/models'),
                faceapi.nets.faceLandmark68Net.loadFromUri('https://justadudewhohacks.github.io/face-api.js/models'),
                faceapi.nets.faceRecognitionNet.loadFromUri('https://justadudewhohacks.github.io/face-api.js/models')
            ]);
            Swal.close();
        }

        async function captureFace() {
            if (!isCameraSetup) await setupCamera();

            const detection = await faceapi
                .detectSingleFace(document.getElementById('videoInput'), new faceapi.TinyFaceDetectorOptions())
                .withFaceLandmarks()
                .withFaceDescriptor();

            if (!detection) {
                Swal.fire('Face Not Detected', 'Please make sure your face is visible and well-lit.', 'error');
                return null;
            }

            const modal = bootstrap.Modal.getInstance(document.getElementById('cameraModal'));
            modal.hide();
            return Array.from(detection.descriptor);
        }

        async function registerUser() {
            const username = document.getElementById('username').value.trim();
            const email = document.getElementById('email').value.trim();
            if (!username || !email) {
                Swal.fire('Missing Fields', 'Please fill in both username and email.', 'warning');
                return;
            }

            const modal = new bootstrap.Modal(document.getElementById('cameraModal'));
            modal.show();

            setTimeout(async () => {
                const encoding = await captureFace();
                if (!encoding) return;

                Swal.fire({ title: 'Registering...', allowOutsideClick: false, didOpen: () => Swal.showLoading() });

                const response = await fetch('/FaceRecognition/RegisterUser', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, email, encoding })
                });

                const result = await response.text();
                Swal.close();
                document.getElementById('resultMessage').innerText = result;
                Swal.fire('Success', result, 'success');
            }, 1500);
        }

                async function loginUser() {
            const modal = new bootstrap.Modal(document.getElementById('cameraModal'));
            modal.show();

            setTimeout(async () => {
                const encoding = await captureFace();
                if (!encoding) return;

                Swal.fire({ title: 'Logging in...', allowOutsideClick: false, didOpen: () => Swal.showLoading() });

                const response = await fetch('/FaceRecognition/LoginUser', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ encoding })
                });

                const result = await response.text();
                Swal.close();
                document.getElementById('resultMessage').innerText = result;

                if (result.toLowerCase().includes("not recognized") || result.toLowerCase().includes("no match")) {
                    Swal.fire('Access Denied', result, 'error');
                } else {
                    Swal.fire('Success', result, 'success');
                }
            }, 1500);
        }


        document.getElementById('registerBtn').addEventListener('click', registerUser);
        document.getElementById('loginBtn').addEventListener('click', loginUser);

        loadModels();
    </script>
}
